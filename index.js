module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    ecmaVersion: 6,
    createDefaultProgram: true,
  },
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      typescript: {
        alwaysTryTypes: true,
        project: ['packages/*/tsconfig.json', './tsconfig.json'],
      },
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
  },
  ignorePatterns: [
    'build/**/*',
    'dist/**/*',
    'node_modules/**/*',
    'node_modules',
    'cdk.out',
    'dist',
  ],
  plugins: [
    'react-hooks',
    '@typescript-eslint',
    'prettier',
    'jsx-a11y',
    'import',
    'simple-import-sort',
  ],
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'airbnb-typescript',
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
    'plugin:jsx-a11y/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
  ],
  rules: {
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/ban-ts-ignore': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/member-delimiter-style': 'off',
    '@typescript-eslint/naming-convention': 'off',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/no-object-literal-type-assertion': 'off',
    'class-methods-use-this': 'off',
    'import/extensions': 'off',
    'import/prefer-default-export': 'off',
    'no-alert': 'error',
    'no-await-in-loop': 'off',
    'no-console': 'warn',
    'no-mixed-operators': 'off',
    'no-restricted-globals': 'off',
    'no-undef': 'off',
    'padding-line-between-statements': [
      'off',
      { blankLine: 'never', prev: ['import'], next: ['import'] },
      {
        blankLine: 'never',
        prev: ['expression'],
        next: ['expression', 'multiline-expression'],
      },
      {
        blankLine: 'never',
        prev: ['singleline-const', 'singleline-let', 'singleline-var'],
        next: ['function', 'expression', 'const', 'let', 'var'],
      },
      {
        blankLine: 'always',
        prev: ['multiline-const', 'multiline-let', 'multiline-var'],
        next: ['function', 'expression', 'const', 'let', 'var', 'block-like'],
      },
      {
        blankLine: 'always',
        prev: ['multiline-expression'],
        next: ['expression', 'multiline-expression'],
      },
      {
        blankLine: 'always',
        prev: ['const', 'let', 'var'],
        next: ['return', 'block'],
      },
      {
        blankLine: 'always',
        prev: ['block-like'],
        next: ['const', 'let', 'var', 'block-like'],
      },
      { blankLine: 'always', prev: ['if'], next: ['if', 'expression'] },
      { blankLine: 'always', prev: ['*'], next: ['case', 'default'] },
    ],
    'prettier/prettier': ['error', { singleQuote: true, trailingComma: 'all' }],
    'react-hooks/exhaustive-deps': 'warn',
    'react-hooks/rules-of-hooks': 'error',
    'react/display-name': 'off',
    'react/jsx-curly-newline': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/jsx-wrap-multilines': 'off',
    'react/no-array-index-key': 'error',
    'react/no-unused-prop-types': 'off',
    'react/prop-types': 'off',
    'react/require-default-props': 'off',
    'simple-import-sort/imports': 'error',
    'simple-import-sort/exports': 'error',
    'import/first': 'error',
    'import/newline-after-import': 'error',
  },
};
